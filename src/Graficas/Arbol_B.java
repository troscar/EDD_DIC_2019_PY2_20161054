/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graficas;

import EDD.ArbolB;
import EDD.NodoExcepciones;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author tracs
 */
public class Arbol_B extends javax.swing.JFrame {

    /**
     * Creates new form Arbol_B
     */
    public String ape ="",nom="";
    public  ArbolB arbolB = new ArbolB();
    
    public Arbol_B(String n , String a) {
        
        arbolB= new ArbolB();
        ape= a;
        nom=n;
        initComponents();
        setLayout(null);
        setTitle("Arbol B - "+n+" "+a);
        setLocationRelativeTo(null);
    }

    private Arbol_B() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 102));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Arbol B");

        jButton1.setText("Auto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Manual");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jLabel2);

        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cargar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(jButton5)
                                .addGap(41, 41, 41)
                                .addComponent(jButton1)
                                .addGap(41, 41, 41)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton6))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String ss = jTextField1.getText();
        System.out.println(jTextField1.getText().getClass());
        int num = Integer.parseInt(ss.trim());
        System.out.println(num);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("eliminacion");
        System.out.println("eliminacion completa");
        arbolB.Graphviz();
        try {
            Thread.sleep(4000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        System.out.println("final");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Usuario usuario = new Usuario(nom, ape);
        usuario.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    public String ruta; Timer timer = null;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(this);
        File Archivo = jfc.getSelectedFile();
        ruta = Archivo.getAbsolutePath();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        timer = null;
        final JSONParser parser = new JSONParser();
        if((timer==null)&&(!"".equals(ruta))){
            timer = new Timer(1000, new ActionListener() {
                
                @Override
                public void actionPerformed(ActionEvent ae) {
                    Object obj = null;
                    try {
                        obj = parser.parse(new FileReader(ruta));
                    } catch (IOException ex) {
                        Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JSONObject arbol=(JSONObject) obj;
                    JSONArray jsonA =(JSONArray)arbol.get("Input");
                    //System.out.println(jsonA.size());
                    JSONObject usuario;
                    //System.out.println(jsonA.get(0));
                    int num;
                    int c =1;
                    for(Object j: jsonA){
                        
                        usuario = (JSONObject) j;
                        System.out.println(usuario.get("num"));
                        num = (int)(long)usuario.get("num");
                        try {
                            arbolB.insertar(num);
                        } catch (NodoExcepciones ex) {
                            Logger.getLogger(Arbol_B.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        ImageIcon icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\ArbolB.jpg"); // esta llamada espera a que la imagen esté cargada.
                        int a  = icono.getIconHeight();
                        int b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        if(c>=3){
                            arbolB.Graphviz();
                            System.out.println("graficar -----");
                        }
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\ArbolB.jpg"); // esta llamada espera a que la imagen esté cargada.
                        a  = icono.getIconHeight();
                        b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        jLabel2.repaint();
                        
                        System.out.println(c);
                        c++;
                        
                    }
                    timer.stop();
                }
            });
            timer.start();
            
        }else{
            JOptionPane.showMessageDialog(null, "NO A INGRESADO ARCHIVO");
        }
        ImageIcon icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\ArbolB.jpg"); // esta llamada espera a que la imagen esté cargada.
                        int a  = icono.getIconHeight();
                        int b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        jLabel2.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        timer = null;
        final JSONParser parser = new JSONParser();
        if((timer==null)&&(!"".equals(ruta))){
            timer = new Timer(1000, new ActionListener() {
                
                @Override
                public void actionPerformed(ActionEvent ae) {
                    Object obj = null;
                    try {
                        obj = parser.parse(new FileReader(ruta));
                    } catch (IOException ex) {
                        Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JSONObject arbol=(JSONObject) obj;
                    JSONArray jsonA =(JSONArray)arbol.get("Input");
                    //System.out.println(jsonA.size());
                    JSONObject usuario;
                    //System.out.println(jsonA.get(0));
                    int num;
                    int c =1;
                    for(Object j: jsonA){
                        
                        usuario = (JSONObject) j;
                        System.out.println(usuario.get("num"));
                        num = (int)(long)usuario.get("num");
                        try {
                            arbolB.insertar(num);
                        } catch (NodoExcepciones ex) {
                            Logger.getLogger(Arbol_B.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        ImageIcon icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\limpio.jpg"); // esta llamada espera a que la imagen esté cargada.
                        int a  = icono.getIconHeight();
                        int b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        if(c>=3){
                            arbolB.Graphviz();
                            System.out.println("graficar -----");
                        }
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Arbol_Avl.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\ArbolB.jpg"); // esta llamada espera a que la imagen esté cargada.
                        a  = icono.getIconHeight();
                        b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        jLabel2.repaint();
                        
                        System.out.println(c);
                        c++;
                        
                    }
                    timer.stop();
                }
            });
            timer.start();
            
        }else{
            JOptionPane.showMessageDialog(null, "NO A INGRESADO ARCHIVO");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ImageIcon icono = new ImageIcon("C:\\Users\\tracs\\Desktop\\ArbolB.jpg"); // esta llamada espera a que la imagen esté cargada.
                        int a  = icono.getIconHeight();
                        int b = icono.getIconWidth();
                        System.out.println(a+" "+b);
                        jLabel2.setSize(a, b);
                        jLabel2.setIcon(icono);
                        jLabel2.validate();
                        jLabel2.revalidate();
                        jLabel2.repaint();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Arbol_B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Arbol_B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Arbol_B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Arbol_B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Arbol_B().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
